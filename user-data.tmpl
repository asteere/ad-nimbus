#cloud-config

---
coreos:
  update:
    reboot-strategy: 'off'
  etcd:
    discovery: DISCOVERY_URL
    addr: $private_ipv4:4001
    peer-addr: $private_ipv4:7001
    peer-election-timeout: 2000
    peer-heartbeat-interval: 500
  fleet:
    public-ip: $private_ipv4
    etcd_request_timeout: 3.0
  units:
  - name: createEtcEnvironment.service
    command: start
    content: |
      [Unit]
      Description=Create /etc/environment if not there and make it editable when core logs in. sudo isnt sufficient.
  
      [Service]
      Type=oneshot
      ExecStart=/bin/sh -c "/tmp/createEtcEnvironment.sh"
  - name: etcd.service
    command: start
  - name: fleet.service
    command: start
  - name: docker-tcp.socket
    command: start
    enable: true
    content: |
      [Unit]
      Description=Docker Socket for the API

      [Socket]
      ListenStream=2375
      Service=docker.service
      BindIPv6Only=both

      [Install]
      WantedBy=sockets.target
  - name: runsysctl.service
    command: start
    content: |
      [Unit]
      Description=Run sysctl
  
      [Service]
      Type=oneshot
      ExecStart=/bin/sh -c "sysctl --system; sysctl -p /etc/sysctl.conf"
  # Note: sysctl.d is started before cloud-init,
  - name: runsysctl.service
    command: start
    content: |
      [Unit]
      Description=Run sysctl
  
      [Service]
      Type=oneshot
      ExecStart=/bin/sh -c "sysctl --system; sysctl -p /etc/sysctl.conf"
# Note: Can't set ulimit -Hn > 4096. Coreos doesnt have PAM module to support changes to /etc/security/limits.conf. 
# Coreos expects docker container to have PAM. Centos has ulimit of 1048576.
# Note: write_files is executed before the coreos section, particularly the units
write_files:
  - path: /etc/sysctl.conf
    owner: root:root
    permissions: 644
    content: |
      fs.file-max = 200000
  - path: /etc/sysctl.d/60-custom.conf
    permissions: 644
    owner: root:root
    content: |
      # Allow reusing sockets in TIME_WAIT state for new connections
      net.ipv4.tcp_tw_reuse = 1

      # Socket max connections waiting to get accepted; the listen() backlog.
      # Default is 128.
      net.core.somaxconn = 4096

      # Decrease fin timeout. After telling the client we are closing, how long to wait for a FIN, ACK?
      # Default is 60.
      net.ipv4.tcp_fin_timeout = 10
  - path: /etc/ntp.conf
    permissions: 644
    owner: root
    content: |
      # Allow for large adjustments in time
      # From: http://serverfault.com/questions/365690/
      #     best-practices-for-ntp-updating-in-virtualbox-virtual-machines-without-guest-add
      tinker panic 0

      # Common pool
      server 0.coreos.pool.ntp.org
      server 1.coreos.pool.ntp.org
      server 2.coreos.pool.ntp.org
      server 3.coreos.pool.ntp.org

      # - Allow only time queries, at a limited rate.
      # - Allow all local queries (IPv4, IPv6)
      restrict default nomodify nopeer noquery limited kod
      restrict 127.0.0.1
      restrict [::1]
  - path: /tmp/createEtcEnvironment.sh
    permissions: 755
    owner: root
    content: |
      #!/bin/bash

      set -x
      envFile=/etc/environment
      if test ! -f "$envFile"
      then
           # Update the following items to reflect your VM image
           publicIpFirstOctet=10.
           privateIpFirstOctet=172.

           public_ipv4=`ip -o addr | awk '/inet '$publicIpFirstOctet'/ {print substr($4,1,length($4)-3)}'`
           private_ipv4=`ip -o addr | awk '/inet '$privateIpFirstOctet'/ {print substr($4,1,length($4)-3)}'`

           echo -e "COREOS_PUBLIC_IPV4=$public_ipv4"'\n'"COREOS_PRIVATE_IPV4=$private_ipv4" >> "$envFile"

           # Create the etcd file from HERE document. Whitespace in this cloud-init file has significance.
           # "EOF_N" must start at the beginning of the .sh file once it has been written to disk.
           # From: https://coreos.com/docs/cluster-management/setup/cloudinit-cloud-config/
           etcdConfFile=/run/systemd/system/etcd.service.d/20-cloudinit.conf
           if test ! -f "$etcdConfFile"
           then
               cat > "$etcdConfFile" << EOF_1
      [Service]
      Environment="ETCD_ADDR=$private_ipv4:4001"
      Environment="ETCD_DISCOVERY=discoveryUrl=DISCOVERY_URL"
      Environment="ETCD_PEER_ADDR=$private_ipv4:7001"
      Environment="ETCD_PEER_ELECTION_TIMEOUT=2000"
      Environment="ETCD_PEER_HEARTBEAT_INTERVAL=500"
      EOF_1
            fi 

            fleetConfFile=/run/systemd/system/fleet.service.d/20-cloudinit.conf1
            if test ! -f "$fleetConfFile"
            then
                cat > "$fleetConfFile" << EOF_2
      [Service]
      Environment="FLEET_ETCD_REQUEST_TIMEOUT=3"
      Environment="FLEET_PUBLIC_IP=$private_ipv4"
      EOF_2
            fi
      fi
  - path: /home/core/.bash_profile
    permissions: 644
    owner: core
    content: |
      #!/bin/bash

      if test -f ~/ad-nimbus/.coreosProfile
      then
           . ~/ad-nimbus/.coreosProfile
      fi

